LINKOBJ = $(patsubst %,$(OBJDIR)/%,$(_LINKOBJ))
C_LINKOBJ = $(patsubst %,$(OBJDIR)/%,$(_C_LINKOBJ))

ifeq ($(DEBUG),1)
OPTIM = $(USEROPTIM) -g -DDEBUG=1
else ifeq ($(DEBUG),2)
OPTIM = $(USEROPTIM) -fsanitize=address -fno-omit-frame-pointer -g3 -DDEBUG=2
else
OPTIM = $(USEROPTIM) -O3 -DNDEBUG
endif

all_linux: CPPFLAGS += -I/usr/X11R6/include

all_linux: build_deps $(LINKOBJ) $(C_LINKOBJ)
	$(CXX) $(CPPFLAGS) $(OPTIM) $(LINKOBJ) -o $(EXECFILE) $(LIBFLAGS)

#TODO: win32 not tested!
win32: EXECFILE += .exe
win32: build_deps $(LINKOBJ)
	$(CXX) $(CPPFLAGS) $(OPTIM) $(LINKOBJ) -o $(EXECFILE) $(LIBFLAGS)

# Create dependency files for automatic recompilation
$(OBJDIR)/%.d:$(SRCDIR)/%.cpp
	@mkdir -p $(@D)
	$(CXX) $(CPPFLAGS) -MM -MF $@ $<
	sed -i -e "1s;.*;$(OBJDIR)/\0;" $@
	echo "	$(CXX) $(CPPFLAGS) -c $(OPTIM) $< -o $(@:.d=.o)" >> $@

$(OBJDIR)/%.d:$(SRCDIR)/%.c
	@mkdir -p $(@D)
	$(CC) $(CFLAGS) -MM -MF $@ $<
	sed -i -e "1s;.*;$(OBJDIR)/\0;" $@
	echo "	$(CC) $(CFLAGS) -c $(OPTIM) $< -o $(@:.d=.o)" >> $@

ifneq ($(MAKECMDGOALS),clean)
-include $(LINKOBJ:.o=.d)
endif

# Cleans all temporary files and compilation results.
clean: clean_deps
	$(RM) $(LINKOBJ) $(LINKOBJ:.o=.d)
	$(RM) $(EXECFILE)


.PHONY: all clean
