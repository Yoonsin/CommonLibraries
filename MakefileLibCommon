FINALSTATICLIB = $(STATIC_LIB)

ifeq ($(PLATFORM),win32)
CPPFLAGS += -D_IRR_STATIC_LIB_ -DCURL_STATICLIB
#CXX = x86_64-w64-mingw32-g++-posix
#CC = x86_64-w64-mingw32-gcc
endif

LINKOBJ = $(patsubst %,$(OBJDIR)/%,$(_LINKOBJ))
C_LINKOBJ = $(patsubst %,$(OBJDIR)/%,$(_C_LINKOBJ))

ifeq ($(DEBUG),1)
OPTIM = $(USEROPTIM) -g -DDEBUG=1
else ifeq ($(DEBUG),2)
OPTIM = $(USEROPTIM) -fsanitize=address -fno-omit-frame-pointer -g3 -DDEBUG=2
else
OPTIM = $(USEROPTIM) -O3 -DNDEBUG
endif

CPPFLAGS += -fstrict-aliasing -fexceptions -frtti -Wall -std=c++11

all_lib: build_deps $(FINALSTATICLIB)

# Builds as static lib
$(FINALSTATICLIB): $(LINKOBJ) $(C_LINKOBJ)
	$(AR) rs $@ $^
	
# Create dependency files for automatic recompilation
$(OBJDIR)/%.d:$(SRCDIR)/%.cpp
	@mkdir -p $(@D)
	$(CXX) $(CPPFLAGS) -MM -MF $@ $<
	sed -i -e "1s;.*;$(OBJDIR)/\0;" $@
	echo "	$(CXX) $(CPPFLAGS) -c $(OPTIM) $< -o $(@:.d=.o)" >> $@
	
$(OBJDIR)/%.d:$(SRCDIR)/%.c
	@mkdir -p $(@D)
	$(CC) $(CFLAGS) -MM -MF $@ $<
	sed -i -e "1s;.*;$(OBJDIR)/\0;" $@
	echo "	$(CC) $(CFLAGS) -c $(OPTIM) $< -o $(@:.d=.o)" >> $@

ifneq ($(MAKECMDGOALS),clean)
-include $(LINKOBJ:.o=.d)
-include $(C_LINKOBJ:.o=.d)
endif

clean: clean_deps
	$(RM) $(LINKOBJ) $(LINKOBJ:.o=.d)
	$(RM) $(FINALSTATICLIB)

.PHONY: all clean
